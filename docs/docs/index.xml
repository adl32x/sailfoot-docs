<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docs on Sailfoot</title>
    <link>https://adl32x.github.io/sailfoot-docs/docs/</link>
    <description>Recent content in Docs on Sailfoot</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://adl32x.github.io/sailfoot-docs/docs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://adl32x.github.io/sailfoot-docs/docs/1.-installation-and-basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://adl32x.github.io/sailfoot-docs/docs/1.-installation-and-basics/</guid>
      <description>Installation and basics Grab the binary from the release page. You will also need either a selenium server, or a webdriver like chromedriver.
Running Run the binary. sf
Basics Sailfoot is built around simple concepts instead of fancy configuration. Your start configuration goes into start.txt and everything else (keywords and test case configuration) inside the directory keywords/.
You can also use the -file flag to change the location of your start script.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://adl32x.github.io/sailfoot-docs/docs/2.-keywords/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://adl32x.github.io/sailfoot-docs/docs/2.-keywords/</guid>
      <description>Keywords Built-in keywords    Keyword Arguments Example     has_text text has_text &amp;lsquo;Hello world!&amp;rsquo;   has_text selector, text has_text &amp;lsquo;.class&amp;rsquo; &amp;lsquo;Hello world!&amp;rsquo;   click selector click &amp;lsquo;.button&amp;rsquo;   click_on_text text click &amp;lsquo;Log in&amp;rsquo;   click_closest_to selector, selector click_closest_to &amp;lsquo;.username&amp;rsquo; &amp;lsquo;.button&amp;rsquo;   input text input &amp;lsquo;andy&amp;rsquo;   input selector, text input &amp;lsquo;.username&amp;rsquo; &amp;lsquo;andy&amp;rsquo;   read selector, variable read &amp;lsquo;.username&amp;rsquo; &amp;lsquo;USERNAME&amp;rsquo;   execute text execute &amp;lsquo;ls -l&amp;rsquo;    Writing your own keywords Making your keyword is as simple as putting it under a directory named keywords/ and saving it into a .</description>
    </item>
    
    <item>
      <title></title>
      <link>https://adl32x.github.io/sailfoot-docs/docs/3.-examples/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://adl32x.github.io/sailfoot-docs/docs/3.-examples/</guid>
      <description> Examples </description>
    </item>
    
    <item>
      <title></title>
      <link>https://adl32x.github.io/sailfoot-docs/docs/4.-misc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://adl32x.github.io/sailfoot-docs/docs/4.-misc/</guid>
      <description> Etymology Pleopod:
 a forked swimming limb of a crustacean, five pairs of which are typically attached to the abdomen. from Greek plein ‘swim, sail’ + pous, pod- ‘foot’.  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://adl32x.github.io/sailfoot-docs/docs/5.-server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://adl32x.github.io/sailfoot-docs/docs/5.-server/</guid>
      <description> Server </description>
    </item>
    
  </channel>
</rss>